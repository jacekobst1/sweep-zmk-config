// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        FunctionKeys {
            if-layers = <1 3>;
            then-layer = <5>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESC>;
            key-positions = <22 23>;
        };

        Del {
            bindings = <&kp DEL>;
            key-positions = <26 27>;
        };

        CapsLock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <13 16>;
        };

        Layer5 {
            bindings = <&sl 5>;
            key-positions = <30 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp Q        &kp W       &kp E        &kp R         &kp T        &kp Y        &kp U        &kp I        &kp O       &kp P
&mt LCTRL A  &mt LALT S  &mt LMETA D  &mt LSHIFT F  &kp G        &kp H        &mt LSHFT J  &mt LMETA K  &mt LALT L  &mt LCTRL SEMI
&lt 4 Z      &kp X       &kp C        &kp V         &kp B        &kp N        &kp M        &kp COMMA    &kp DOT     &kp FSLH
                                      &lt 1 SPACE   &lt 2 TAB    &lt 4 ENTER  &lt 3 BSPC
            >;
        };

        Navigation {
            bindings = <
&kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE    &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE
&kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE    &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE
&kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE    &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE
                                 &kp SPACE  &kp SPACE    &kp SPACE  &kp SPACE
            >;
        };

        AppNavigation+Media {
            bindings = <
&trans     &kp SPACE  &kp SPACE  &kp SPACE  &trans       &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE
&kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE    &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE
&trans     &trans     &trans     &trans     &trans       &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &trans
                                 &trans     &trans       &trans     &trans
            >;
        };

        Numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        Mouse+Media {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        FunctionKeys {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans  &trans  &kp C_RESET
&trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_1  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };
    };
};
